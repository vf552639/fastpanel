#!/usr/bin/env python3
"""
FastPanel Automation MVP
–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞
"""

import json
import os
from dataclasses import dataclass, asdict
from typing import List, Optional
import paramiko
from pathlib import Path

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DATA_FILE = Path("data/servers.json")
LOG_FILE = Path("logs/automation.log")

@dataclass
class Server:
    """–ú–æ–¥–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞"""
    id: str
    name: str
    ip: str
    ssh_user: str = "root"
    ssh_port: int = 22
    fastpanel_installed: bool = False
    admin_url: Optional[str] = None
    admin_password: Optional[str] = None
    created_at: str = ""
    
class ServerManager:
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞–º–∏ - —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è"""
    
    def __init__(self):
        self.servers: List[Server] = []
        self.load_servers()
    
    def load_servers(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏–∑ JSON"""
        if DATA_FILE.exists():
            with open(DATA_FILE, 'r') as f:
                data = json.load(f)
                self.servers = [Server(**s) for s in data]
    
    def save_servers(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ JSON"""
        DATA_FILE.parent.mkdir(exist_ok=True)
        with open(DATA_FILE, 'w') as f:
            json.dump([asdict(s) for s in self.servers], f, indent=2)
    
    def add_server(self, server: Server) -> bool:
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
        if any(s.ip == server.ip for s in self.servers):
            return False
        self.servers.append(server)
        self.save_servers()
        return True

class FastPanelInstaller:
    """–£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ FastPanel - —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è"""
    
    @staticmethod
    def install(server: Server, ssh_password: str) -> dict:
        """
        –£—Å—Ç–∞–Ω–æ–≤–∫–∞ FastPanel –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
        """
        result = {
            'success': False,
            'admin_url': None,
            'admin_password': None,
            'error': None
        }
        
        try:
            # SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            ssh = paramiko.SSHClient()
            ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            ssh.connect(
                server.ip,
                port=server.ssh_port,
                username=server.ssh_user,
                password=ssh_password,
                timeout=30
            )
            
            # –ö–æ–º–∞–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ FastPanel
            install_cmd = "wget -O - http://fastpanel.direct/install_ru.sh | bash -"
            
            print(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É FastPanel –Ω–∞ {server.ip}...")
            stdin, stdout, stderr = ssh.exec_command(install_cmd, get_pty=True)
            
            # –ß–∏—Ç–∞–µ–º –≤—ã–≤–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∞
            admin_password = None
            for line in stdout:
                print(f"  {line.strip()}")
                # –ü–∞—Ä—Å–∏–º –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ –∏–∑ –≤—ã–≤–æ–¥–∞
                if "–ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:" in line or "Admin password:" in line:
                    admin_password = line.split(":")[-1].strip()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
            exit_status = stdout.channel.recv_exit_status()
            if exit_status == 0:
                result['success'] = True
                result['admin_url'] = f"https://{server.ip}:8888"
                result['admin_password'] = admin_password or "check_install_output"
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞
                server.fastpanel_installed = True
                server.admin_url = result['admin_url']
                server.admin_password = result['admin_password']
            else:
                result['error'] = stderr.read().decode()
            
            ssh.close()
            
        except Exception as e:
            result['error'] = str(e)
        
        return result

class SimpleCLI:
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è MVP"""
    
    def __init__(self):
        self.manager = ServerManager()
        self.installer = FastPanelInstaller()
    
    def run(self):
        """–ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª"""
        while True:
            self.show_menu()
            choice = input("\nüëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
            
            if choice == '1':
                self.add_server()
            elif choice == '2':
                self.install_fastpanel()
            elif choice == '3':
                self.list_servers()
            elif choice == '0':
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
    
    def show_menu(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é"""
        print("\n" + "="*50)
        print("üöÄ FastPanel Automation MVP")
        print("="*50)
        print("1. –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å FastPanel")
        print("3. –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤")
        print("0. –í—ã—Ö–æ–¥")
    
    def add_server(self):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞"""
        print("\nüìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞")
        print("-" * 30)
        
        name = input("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞: ").strip()
        ip = input("IP –∞–¥—Ä–µ—Å: ").strip()
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID
        import uuid
        from datetime import datetime
        
        server = Server(
            id=str(uuid.uuid4())[:8],
            name=name,
            ip=ip,
            created_at=datetime.now().isoformat()
        )
        
        if self.manager.add_server(server):
            print(f"‚úÖ –°–µ—Ä–≤–µ—Ä {name} –¥–æ–±–∞–≤–ª–µ–Ω!")
        else:
            print(f"‚ùå –°–µ—Ä–≤–µ—Ä —Å IP {ip} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
    
    def install_fastpanel(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ FastPanel"""
        if not self.manager.servers:
            print("‚ùå –ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤")
            return
        
        print("\nüìã –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:")
        print("-" * 30)
        
        for i, server in enumerate(self.manager.servers, 1):
            status = "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" if server.fastpanel_installed else "‚è≥ –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            print(f"{i}. {server.name} ({server.ip}) - {status}")
        
        try:
            choice = int(input("\n–ù–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞: ")) - 1
            if 0 <= choice < len(self.manager.servers):
                server = self.manager.servers[choice]
                
                if server.fastpanel_installed:
                    print("‚ÑπÔ∏è FastPanel —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ")
                    print(f"üîó Admin URL: {server.admin_url}")
                    print(f"üîë Admin Password: {server.admin_password}")
                    return
                
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º SSH –ø–∞—Ä–æ–ª—å
                import getpass
                ssh_password = getpass.getpass(f"SSH –ø–∞—Ä–æ–ª—å –¥–ª—è {server.ip}: ")
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
                result = self.installer.install(server, ssh_password)
                
                if result['success']:
                    print("\n‚úÖ FastPanel —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
                    print(f"üîó Admin URL: {result['admin_url']}")
                    print(f"üîë Admin Password: {result['admin_password']}")
                    self.manager.save_servers()
                else:
                    print(f"\n‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {result['error']}")
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä")
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
    
    def list_servers(self):
        """–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤"""
        if not self.manager.servers:
            print("\nüì≠ –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –ø—É—Å—Ç")
            return
        
        print("\nüìä –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤")
        print("-" * 50)
        
        for server in self.manager.servers:
            print(f"\nüñ•Ô∏è  {server.name}")
            print(f"   IP: {server.ip}")
            print(f"   ID: {server.id}")
            if server.fastpanel_installed:
                print(f"   ‚úÖ FastPanel —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                print(f"   URL: {server.admin_url}")
            else:
                print(f"   ‚è≥ FastPanel –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞"""
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    Path("data").mkdir(exist_ok=True)
    Path("logs").mkdir(exist_ok=True)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º CLI
    cli = SimpleCLI()
    cli.run()

if __name__ == "__main__":
    main()
