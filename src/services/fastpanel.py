"""
FastPanel Service - –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å FastPanel
"""
import re
from typing import Dict, Optional, Any
from dataclasses import dataclass
from datetime import datetime

from src.core.ssh_manager import SSHManager, SSHResult
from src.utils.logger import get_logger
from src.config import config

logger = get_logger("fastpanel")

@dataclass
class FastPanelInfo:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º FastPanel"""
    installed: bool
    version: Optional[str] = None
    admin_url: Optional[str] = None
    admin_password: Optional[str] = None
    install_date: Optional[str] = None
    services_status: Dict[str, bool] = None

class FastPanelService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å FastPanel"""
    
    def __init__(self, ssh_manager: SSHManager = None):
        self.ssh = ssh_manager or SSHManager()
    
    def check_installation(self, host: str, username: str = "root",
                          password: str = None) -> FastPanelInfo:
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ FastPanel
        """
        info = FastPanelInfo(installed=False)
        
        if not self.ssh.connected:
            if not self.ssh.connect(host, username, password):
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ {host}")
                return info
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ FastPanel
        result = self.ssh.execute("which fastpanel")
        if result.success and result.stdout.strip():
            info.installed = True
            
            # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é
            version_result = self.ssh.execute("fastpanel --version 2>/dev/null || echo 'unknown'")
            if version_result.success:
                info.version = version_result.stdout.strip()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º URL –∞–¥–º–∏–Ω–∫–∏
            info.admin_url = f"https://{host}:{config.fastpanel_admin_port}"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
            info.services_status = self._check_services()
        
        return info
    
    def install(self, host: str, username: str = "root",
               password: str = None, callback=None) -> Dict[str, Any]:
        """
        –£—Å—Ç–∞–Ω–æ–≤–∫–∞ FastPanel –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        
        Args:
            host: IP –∏–ª–∏ hostname —Å–µ—Ä–≤–µ—Ä–∞
            username: SSH –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            password: SSH –ø–∞—Ä–æ–ª—å
            callback: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        
        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        """
        result = {
            'success': False,
            'admin_url': None,
            'admin_password': None,
            'error': None,
            'install_time': None
        }
        
        try:
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –µ—Å–ª–∏ –µ—â–µ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
            if not self.ssh.connected:
                if not self.ssh.connect(host, username, password):
                    result['error'] = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –ø–æ SSH"
                    return result
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ
            check = self.check_installation(host, username, password)
            if check.installed:
                result['error'] = "FastPanel —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                result['admin_url'] = check.admin_url
                return result
            
            logger.info(f"–ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É FastPanel –Ω–∞ {host}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è MVP)
            if callback:
                callback("üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...")
            
            update_result = self.ssh.execute("apt-get update -qq", timeout=60)
            if not update_result.success:
                logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å apt —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏")
            
            # –°–∫–∞—á–∏–≤–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫
            if callback:
                callback("üì• –ó–∞–≥—Ä—É–∑–∫–∞ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ FastPanel...")
            
            install_cmd = f"wget -O - {config.fastpanel_install_url} | bash -"
            
            start_time = datetime.now()
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            admin_password = None
            
            def parse_output(line: str):
                nonlocal admin_password
                if callback:
                    callback(f"  {line[:80]}...")  # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
                
                # –ò—â–µ–º –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –≤—ã–≤–æ–¥–µ
                if "admin password" in line.lower() or "–ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" in line.lower():
                    # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –ø–∞—Ä–æ–ª—å
                    parts = line.split(":")
                    if len(parts) > 1:
                        potential_password = parts[-1].strip()
                        if potential_password and len(potential_password) > 6:
                            admin_password = potential_password
                            logger.info(f"–ù–∞–π–¥–µ–Ω –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                
                # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–∞—Ä–æ–ª—è
                password_match = re.search(r'password:\s*(\S+)', line, re.IGNORECASE)
                if password_match:
                    admin_password = password_match.group(1)
            
            install_result = self.ssh.execute_with_progress(install_cmd, parse_output)
            
            if install_result.success:
                result['success'] = True
                result['admin_url'] = f"https://{host}:{config.fastpanel_admin_port}"
                result['admin_password'] = admin_password or self._get_admin_password()
                result['install_time'] = (datetime.now() - start_time).total_seconds()
                
                logger.info(f"FastPanel —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {host}")
                
                if callback:
                    callback("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            else:
                result['error'] = f"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π: {install_result.stderr}"
                logger.error(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ FastPanel: {install_result.stderr}")
            
        except Exception as e:
            result['error'] = str(e)
            logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ: {e}", exc_info=True)
        
        return result
    
    def create_site(self, domain: str, site_type: str = "php",
                   php_version: str = "8.1") -> bool:
        """
        –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–∞–π—Ç–∞ –≤ FastPanel
        """
        if not self.ssh.connected:
            logger.error("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            return False
        
        try:
            # –ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–π—Ç–∞ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–µ—Ä—Å–∏–∏ FastPanel)
            cmd = f"fastpanel site create --domain {domain} --type {site_type}"
            
            if site_type == "php":
                cmd += f" --php {php_version}"
            
            result = self.ssh.execute(cmd)
            
            if result.success:
                logger.info(f"–°–∞–π—Ç {domain} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
                return True
            else:
                logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–π—Ç–∞: {result.stderr}")
                return False
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∞–π—Ç–∞: {e}")
            return False
    
    def _check_services(self) -> Dict[str, bool]:
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ FastPanel
        """
        services = {}
        service_names = ['nginx', 'mysql', 'php-fpm', 'fastpanel']
        
        for service in service_names:
            result = self.ssh.execute(f"systemctl is-active {service}")
            services[service] = result.stdout.strip() == "active"
        
        return services
    
    def _get_admin_password(self) -> Optional[str]:
        """
        –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–æ–≤
        """
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
        locations = [
            "/usr/local/fastpanel/conf/admin.passwd",
            "/root/.fastpanel_password",
            "/etc/fastpanel/admin.password"
        ]
        
        for location in locations:
            result = self.ssh.execute(f"cat {location} 2>/dev/null")
            if result.success and result.stdout.strip():
                return result.stdout.strip()
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É —Å–±—Ä–æ—Å–∞
        logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–±—Ä–æ—Å")
        return None
    
    def reset_admin_password(self) -> Optional[str]:
        """
        –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ FastPanel
        """
        if not self.ssh.connected:
            return None
        
        try:
            # –ö–æ–º–∞–Ω–¥–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è (–º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –≤ —Ä–∞–∑–Ω—ã—Ö –≤–µ—Ä—Å–∏—è—Ö)
            result = self.ssh.execute("fastpanel admin password reset")
            
            if result.success:
                # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –∏–∑ –≤—ã–≤–æ–¥–∞
                for line in result.stdout.split('\n'):
                    if 'password' in line.lower():
                        parts = line.split(':')
                        if len(parts) > 1:
                            return parts[-1].strip()
            
            return None
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è: {e}")
            return None
